services:
  # Frontend service (production-like)
  frontend-prod:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    image: csv-viewer-frontend-prod:latest
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      - backend-prod
    restart: unless-stopped
    networks:
      - app-network
    environment:
      - BACKEND_PORT=${BACKEND_PORT}
    env_file:
      - .env.prod

  # Backend service
  backend-prod:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    image: csv-viewer-backend-prod:latest
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    volumes:
      - ${CSV_FILES_DIR}:/app/data
    environment:
      - PYTHONPATH=/app
      - CSV_FILES_DIR=${CSV_FILES_DIR}
      - NETSPEED_CURRENT_DIR=${NETSPEED_CURRENT_DIR}
      - NETSPEED_HISTORY_DIR=${NETSPEED_HISTORY_DIR}
    env_file:
      - .env.prod
    depends_on:
      opensearch-prod:
        condition: service_healthy
      redis-prod:
        condition: service_started
    restart: always
    networks:
      app-network:
        aliases:
          - backend

  # Redis service - isolated port
  redis-prod:
    image: redis:7-alpine
    env_file:
      - .env.prod
    ports:
      - "${REDIS_HOST_PORT}:${REDIS_PORT}"
    volumes:
      - redis-data-prod:/data
    restart: unless-stopped
    networks:
      app-network:
        aliases:
          - redis
    command: redis-server --appendonly yes
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 10

  # OpenSearch service - isolated ports
  opensearch-prod:
    image: opensearchproject/opensearch:2
    container_name: opensearch-prod
    env_file:
      - .env.prod
    ports:
      - "${OPENSEARCH_HOST_PORT}:${OPENSEARCH_PORT}"
      - "${OPENSEARCH_TRANSPORT_HOST_PORT}:${OPENSEARCH_TRANSPORT_PORT}"
    environment:
      - cluster.name=csv-viewer-prod-cluster
      - node.name=opensearch-node-prod
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
      - "OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}"
    healthcheck:
      test: [ "CMD-SHELL", "curl -s http://localhost:${OPENSEARCH_PORT}/_cluster/health | grep -q '\"status\":\"green\"\\|\"status\":\"yellow\"'" ]
      interval: 10s
      timeout: 10s
      retries: 20
    volumes:
      - opensearch-data-prod:/usr/share/opensearch/data
      - opensearch-logs-prod:/usr/share/opensearch/logs
    restart: unless-stopped
    networks:
      app-network:
        aliases:
          - opensearch
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536

networks:
  app-network:
    driver: bridge
    name: csv-viewer-prod_app-network

volumes:
  redis-data-prod:
  opensearch-data-prod:
  opensearch-logs-prod:
