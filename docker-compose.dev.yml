services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: dev
    ports:
      - "3001:3000"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/package.dev.json:/app/package.json
      - ./frontend/package-lock.json:/app/package-lock.json
    depends_on:
      - backend
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_PORT=0
      - PORT=3000
      - REACT_APP_API_URL=http://backend:${BACKEND_PORT}
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: dev
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    volumes:
      - ./backend:/app
      - ${CSV_FILES_DIR}:/app/data
    environment:
      - NODE_ENV=development
    env_file:
      - .env
    depends_on:
      opensearch:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network

  # Redis service - use standard redis image
  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - app-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  # OpenSearch service - use standard opensearch image
  opensearch:
    image: opensearchproject/opensearch:2
    container_name: opensearch
    ports:
      - "${OPENSEARCH_PORT}:${OPENSEARCH_PORT}"
      - "${OPENSEARCH_TRANSPORT_PORT}:${OPENSEARCH_TRANSPORT_PORT}"
    environment:
      - cluster.name=csv-viewer-cluster
      - node.name=opensearch-node
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
      - "OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s http://localhost:9200/_cluster/health | grep -q '\"status\":\"green\"\\|\"status\":\"yellow\"'",
        ]
      interval: 10s
      timeout: 10s
      retries: 20
    volumes:
      - opensearch-data:/usr/share/opensearch/data
      - opensearch-logs:/usr/share/opensearch/logs
    restart: unless-stopped
    networks:
      - app-network
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
  opensearch-data:
  opensearch-logs:
